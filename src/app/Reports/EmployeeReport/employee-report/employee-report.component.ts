import { Component, OnInit } from '@angular/core';
import { EmployeeReportService } from '../../../services/employee-report.service';
import { Employee } from '../../../models/employee';
import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import * as XLSX from 'xlsx';

@Component({
  selector: 'app-employee-report',
  templateUrl: './employee-report.component.html',
  styleUrl: './employee-report.component.css'
})
export class EmployeeReportComponent implements OnInit {
  employees: Employee[] = [];
    filteredEmployees: Employee[] = [];

    constructor(private employeeReportService: EmployeeReportService) {}

    ngOnInit(): void {
        this.loadEmployeeReport();
    }

    loadEmployeeReport(): void {
        this.employeeReportService.getEmployeeReport().subscribe(data => {
            this.employees = data;
            this.filteredEmployees = data;
        });
    }

    filterEmployees(event: Event): void {
      const input = event.target as HTMLInputElement | null; // Type assertion
      if (input) {
          const query = input.value; // Now safe to access value
          this.filteredEmployees = this.employees.filter(e =>
              e.empFirstName.toLowerCase().includes(query.toLowerCase()) ||
              e.empLastName.toLowerCase().includes(query.toLowerCase()) ||
              e.empEmail.toLowerCase().includes(query.toLowerCase())
          );
      }
  }

  base64Image: string = '';

  downloadPDF(): void {
    const doc = new jsPDF();
    
    // Get document width
    const pageWidth = doc.internal.pageSize.getWidth();
    
    // Image dimensions and position
    const imgWidth = 30; // Set the width of the image
    const imgHeight = 30; // Set the height of the image
    const imgXPosition = pageWidth - imgWidth - 10; // Position 10 units from the right
    const imgYPosition = 5; // Top of the document

    // Add the image at the calculated position
    doc.addImage(this.base64Image, 'JPEG', imgXPosition, imgYPosition, imgWidth, imgHeight);

    // Adjust text position to avoid overlapping the image
    const textYPosition = imgYPosition + imgHeight + 10; // Place text below the image
    
    // Add the report title and generation date below the image
    doc.text('Employee Report', 10, textYPosition);
    doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 10, textYPosition + 10);

    // Add the table with employee data
    doc.autoTable({
        head: [['First Name', 'Last Name', 'Email', 'Phone']],
        body: this.filteredEmployees.map(e => [
            e.empFirstName, e.empLastName, e.empEmail, e.empPhone
        ]),
        startY: textYPosition + 20, // Start the table below the text
    });

    // Save the PDF
    doc.save('Employee_Report.pdf');
}

    exportExcel(): void {
        const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(this.filteredEmployees);
        const wb: XLSX.WorkBook = XLSX.utils.book_new();
        XLSX.utils.book_append_sheet(wb, ws, 'Employee Report');
        XLSX.writeFile(wb, 'Employee_Report.xlsx');
    }
}
